// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Study_Site.Persistence.Contexts;

#nullable disable

namespace StudySite.Persistence.Migrations
{
    [DbContext(typeof(StudySiteDbContext))]
    [Migration("20230105212023_mig_1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Study_Site.Domain.Entities.ClockTower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Time")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("ClockTower");
                });

            modelBuilder.Entity("Study_Site.Domain.Entities.Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<string>>("Buildings")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("ClockTowerId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StoneResource")
                        .HasColumnType("integer");

                    b.Property<int>("WoodResource")
                        .HasColumnType("integer");

                    b.Property<int>("Workers")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClockTowerId");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("Study_Site.Domain.Entities.Town", b =>
                {
                    b.HasOne("Study_Site.Domain.Entities.ClockTower", "ClockTower")
                        .WithMany()
                        .HasForeignKey("ClockTowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClockTower");
                });
#pragma warning restore 612, 618
        }
    }
}
